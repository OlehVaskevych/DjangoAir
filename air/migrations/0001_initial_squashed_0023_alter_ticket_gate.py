# Generated by Django 5.2 on 2025-07-03 12:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import air.models


class Migration(migrations.Migration):

    replaces = [
        ("air", "0001_initial"),
        ("air", "0002_alter_airplane_name_alter_flight_airplane_and_more"),
        ("air", "0003_remove_flight_airplane_remove_flight_origin"),
        ("air", "0004_boardingpass_boarding_time_flight_airplane_and_more"),
        ("air", "0005_remove_airlineuser_balance_and_more"),
        ("air", "0006_remove_ticket_booking_reference"),
        ("air", "0007_dietaryoption_meal"),
        ("air", "0008_baggage_comfort"),
        ("air", "0009_meal_stripe_price_id"),
        ("air", "0010_baggage_stripe_price_id_comfort_stripe_price_id"),
        ("air", "0011_remove_ticket_options_ticket_baggage_ticket_comforts_and_more"),
        ("air", "0012_ticket_booking_reference"),
        ("air", "0013_ticket_gate_alter_ticket_booking_reference"),
        ("air", "0014_ticket_status_alter_ticket_booking_reference"),
        ("air", "0015_alter_ticket_booking_reference_alter_ticket_gate_and_more"),
        ("air", "0016_flight_status_alter_ticket_booking_reference_and_more"),
        ("air", "0017_alter_flight_status_alter_ticket_booking_reference_and_more"),
        ("air", "0018_alter_ticket_booking_reference_alter_ticket_gate"),
        ("air", "0019_alter_ticket_booking_reference_alter_ticket_gate"),
        ("air", "0020_alter_ticket_booking_reference_alter_ticket_gate"),
        ("air", "0021_alter_ticket_booking_reference_alter_ticket_gate"),
        ("air", "0022_alter_airlineuser_options_alter_airplane_options_and_more"),
        ("air", "0023_alter_ticket_gate"),
    ]

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Airplane",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the airplane",
                        max_length=100,
                        verbose_name="Airplane name",
                    ),
                ),
                (
                    "seat_capacity",
                    models.PositiveIntegerField(
                        help_text="Seat capacity of the airplane",
                        verbose_name="Airplane seat capacity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Airplane",
                "verbose_name_plural": "Airplanes",
            },
        ),
        migrations.CreateModel(
            name="AirlineUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("passenger", "Passenger"),
                            ("gate_manager", "Gate Manager"),
                            ("checkin_manager", "Check-in Manager"),
                            ("supervisor", "Supervisor"),
                        ],
                        default="passenger",
                        help_text="Defines the user role in the airline system",
                        max_length=20,
                        verbose_name="User Role",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Airline User",
                "verbose_name_plural": "Airline Users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Flight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "flight_number",
                    models.CharField(
                        db_index=True,
                        help_text="Unique flight number",
                        max_length=10,
                        unique=True,
                        verbose_name="Flight number",
                    ),
                ),
                (
                    "departure_time",
                    models.DateTimeField(
                        help_text="Departure time of the flight",
                        verbose_name="Departure time",
                    ),
                ),
                (
                    "arrival_time",
                    models.DateTimeField(
                        help_text="Arrival time of the flight",
                        verbose_name="Arrival time",
                    ),
                ),
                (
                    "destination",
                    models.CharField(
                        help_text="Destination of the flight",
                        max_length=100,
                        verbose_name="Destination",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base price (without services)",
                        max_digits=8,
                        verbose_name="Base price",
                    ),
                ),
                (
                    "airplane",
                    models.ForeignKey(
                        blank=True,
                        help_text="Airplane of the flight",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flights",
                        to="air.airplane",
                        verbose_name="Airplane",
                    ),
                ),
                (
                    "destination_code",
                    models.CharField(
                        blank=True,
                        help_text="Destination code of the flight",
                        max_length=10,
                        verbose_name="Destination code",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        blank=True,
                        help_text="Origin of the flight",
                        max_length=100,
                        null=True,
                        verbose_name="Origin",
                    ),
                ),
                (
                    "origin_code",
                    models.CharField(
                        blank=True,
                        help_text="Origin code of the flight",
                        max_length=10,
                        verbose_name="Origin code",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("canceled", "Canceled"),
                            ("in_air", "In Air"),
                            ("arrived", "Arrived"),
                        ],
                        default="upcoming",
                        help_text="Status of the flight",
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Flight",
                "verbose_name_plural": "Flights",
            },
        ),
        migrations.CreateModel(
            name="DietaryOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, verbose_name="Name of the food option"
                    ),
                ),
            ],
            options={
                "verbose_name": "Dietary Option",
                "verbose_name_plural": "Dietary Options",
            },
        ),
        migrations.CreateModel(
            name="Meal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the meal",
                        max_length=100,
                        verbose_name="Meal name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the meal",
                        verbose_name="Meal description",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        help_text="Price of the meal", verbose_name="Meal price"
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        help_text="Image url of the meal", verbose_name="Meal image URL"
                    ),
                ),
                (
                    "dietary_options",
                    models.ManyToManyField(
                        related_name="meals",
                        to="air.dietaryoption",
                        verbose_name="Dietary Options",
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        help_text="Stripe price id for payment",
                        max_length=100,
                        verbose_name="Stripe price ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Meal",
                "verbose_name_plural": "Meals",
            },
        ),
        migrations.CreateModel(
            name="Baggage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the baggage",
                        max_length=100,
                        verbose_name="Baggage name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the baggage",
                        verbose_name="Baggage description",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        help_text="Price of the baggage", verbose_name="Baggage price"
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        help_text="Weight of the baggage", verbose_name="Baggage weight"
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        help_text="Stripe price id for payment",
                        max_length=100,
                        verbose_name="Stripe price ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Baggage",
                "verbose_name_plural": "Baggages",
            },
        ),
        migrations.CreateModel(
            name="Comfort",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the comfort option",
                        max_length=100,
                        verbose_name="Comfort option name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the comfort option",
                        verbose_name="Comfort option description",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        help_text="Price of the comfort option",
                        verbose_name="Comfort option price",
                    ),
                ),
                (
                    "stripe_price_id",
                    models.CharField(
                        help_text="Stripe price id for payment",
                        max_length=100,
                        verbose_name="Stripe price ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comfort",
                "verbose_name_plural": "Comforts",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seat_number",
                    models.CharField(
                        help_text="Seat number of the ticket",
                        max_length=5,
                        verbose_name="Seat number",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of the ticket",
                        max_digits=8,
                        verbose_name="Price",
                    ),
                ),
                (
                    "is_checked_in",
                    models.BooleanField(
                        default=False,
                        help_text="Is passenger checked in",
                        verbose_name="Is passenger checked in",
                    ),
                ),
                (
                    "is_boarded",
                    models.BooleanField(
                        default=False,
                        help_text="Is passenger boarded",
                        verbose_name="Is passenger boarded",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Ticket creating time",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "flight",
                    models.ForeignKey(
                        help_text="Flight of the ticket",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="air.flight",
                        verbose_name="Flight",
                    ),
                ),
                (
                    "passenger",
                    models.ForeignKey(
                        help_text="Passenger of the ticket",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Passenger",
                    ),
                ),
                (
                    "seat_class",
                    models.CharField(
                        choices=[
                            ("economy", "Economy"),
                            ("business", "Business"),
                            ("first", "First"),
                        ],
                        default="economy",
                        help_text="Seat class of the ticket",
                        max_length=20,
                        verbose_name="Seat class",
                    ),
                ),
                (
                    "baggage",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Baggage options of the ticket",
                        related_name="tickets",
                        to="air.baggage",
                        verbose_name="Baggage options",
                    ),
                ),
                (
                    "comforts",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Comfort options of the ticket",
                        related_name="tickets",
                        to="air.comfort",
                        verbose_name="Comfort options",
                    ),
                ),
                (
                    "meals",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Meals of the ticket",
                        related_name="tickets",
                        to="air.meal",
                        verbose_name="Meals",
                    ),
                ),
                (
                    "booking_reference",
                    models.CharField(
                        db_index=True,
                        default=air.models.generate_booking_reference,
                        editable=False,
                        help_text="Booking reference of the ticket",
                        max_length=10,
                        unique=True,
                        verbose_name="Booking reference",
                    ),
                ),
                (
                    "gate",
                    models.IntegerField(
                        default=5, help_text="Gate of the ticket", verbose_name="Gate"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("canceled", "Canceled"),
                            ("boarded", "Boarded"),
                            ("checked_in", "Checked In"),
                            ("late", "Late"),
                            ("used", "Used"),
                        ],
                        default="upcoming",
                        help_text="Status of the ticket",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
            },
        ),
        migrations.CreateModel(
            name="BoardingPass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gate_number",
                    models.CharField(
                        help_text="Gate number of the boarding pass",
                        max_length=10,
                        verbose_name="Gate number",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        help_text="Ticket of the boarding pass",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="boarding_pass",
                        to="air.ticket",
                        verbose_name="Ticket",
                    ),
                ),
                (
                    "boarding_time",
                    models.DateTimeField(
                        blank=True,
                        help_text="Boarding time of the boarding pass",
                        null=True,
                        verbose_name="Boarding time",
                    ),
                ),
            ],
            options={
                "verbose_name": "Boarding Pass",
                "verbose_name_plural": "Boarding Passes",
            },
        ),
        migrations.CreateModel(
            name="CheckIn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "luggage_weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Luggage weight of the ticket",
                        max_digits=5,
                        verbose_name="Luggage weight",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        help_text="Ticket of the checkin",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checkins",
                        to="air.ticket",
                        verbose_name="Ticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Check-in",
                "verbose_name_plural": "Check-ins",
            },
        ),
    ]
